#include "GaussLegendreQuadrature.h"

GaussLegendreQuadrature::GaussLegendreQuadrature()
    :_number_sample_points(32),
    _weights({ 0.0965400885147278005667648,0.0956387200792748594190820,0.0938443990808045656391802,0.0911738786957638847128686,0.0876520930044038111427715,0.0833119242269467552221991,0.0781938957870703064717409,0.0723457941088485062253994,0.0658222227763618468376501,0.0586840934785355471452836,0.0509980592623761761961632,0.0428358980222266806568786,0.0342738629130214331026877,0.0253920653092620594557526,0.0162743947309056706051706,0.0070186100094700966004071, 0.0965400885147278005667648,0.0956387200792748594190820,0.0938443990808045656391802,0.0911738786957638847128686,0.0876520930044038111427715,0.0833119242269467552221991,0.0781938957870703064717409,0.0723457941088485062253994,0.0658222227763618468376501,0.0586840934785355471452836,0.0509980592623761761961632,0.0428358980222266806568786,0.0342738629130214331026877,0.0253920653092620594557526,0.0162743947309056706051706,0.0070186100094700966004071 }),
    _points({ -0.0483076656877383162348126,-0.1444719615827964934851864,-0.2392873622521370745446032,-0.3318686022821276497799168,-0.4213512761306353453641194,-0.5068999089322293900237475,-0.5877157572407623290407455,-0.6630442669302152009751152,-0.7321821187402896803874267,-0.7944837959679424069630973,-0.8493676137325699701336930,-0.8963211557660521239653072,-0.9349060759377396891709191,-0.9647622555875064307738119,-0.9856115115452683354001750,-0.9972638618494815635449811,0.0483076656877383162348126,0.1444719615827964934851864,0.2392873622521370745446032,0.3318686022821276497799168,0.4213512761306353453641194,0.5068999089322293900237475,0.5877157572407623290407455,0.6630442669302152009751152,0.7321821187402896803874267,0.7944837959679424069630973,0.8493676137325699701336930,0.8963211557660521239653072,0.9349060759377396891709191,0.9647622555875064307738119,0.9856115115452683354001750,0.9972638618494815635449811 })
{
}

double GaussLegendreQuadrature::integrate(std::function<double(double)> func) const
{
    double intg = 0;
    for (size_t idx = 0; idx < _weights.size(); idx++)
    {
        intg += _weights[idx] * func(_points[idx] / (1 - pow(_points[idx], 2))) *
            (1 + pow(_points[idx], 2)) / pow((1 - _points[idx] * _points[idx]), 2);
    }
    return intg;
}
    